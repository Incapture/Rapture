// A standard Reflex script to import data from a CSV file
// which is formatted to a given structure,
// to be transformed to another structure
// and then saved to an entity

const srcFile = 'country-codes.csv';
const srcStructure = '//import/countryDP';
const targStructure = '//standard/country';
const targEntity = '//standard/country';

fi = file(srcFile);
headers = false;

srcS = #transform.getStructure(srcStructure);
fieldDefs = loadFields(srcS);

for f in fi do
    fields = split(f, ',', false);
    if (size(fields) > 0) do
        if (!headers) do
            headerCodes = fields;
            headers = true;
        else do
            d = {};
            for i = 0 to size(fields) -1  do
                v = fields[i];
                if (fieldDefs[headerCodes[i]]['fieldType'] == 'NUMBER') do
                   v = cast(v, 'number');
                end
                d[headerCodes[i]] = v;
            end
            process(d);
        end
    end
end

def process(d)
    // Process this document
    val = #transform.validateDocument(json(d), srcStructure);
    if (size(val) != 0) do
        println(val);
    else do
        // Now convert this to a different structure and save that as an entity
        newD = #transform.transformDocument(json(d), srcStructure, targStructure);
        // And save this
        println("Saving ${newD}");
        #entity.putEntityDocument(targEntity, newD);
    end
end

def loadFields(srcS) 
    ret = {};
    for f in srcS['fields'] do
        fi = #transform.getField(f.fieldUri);
        ret[f.key] = fi;
    end
    return ret;
end
