/**
 * Copyright (C) 2011-2013 Incapture Technologies LLC
 *
 * This is an autogenerated license statement. When copyright notices appear below
 * this one that copyright supercedes this statement.
 *
 * Unless required by applicable law or agreed to in writing, software is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied.
 *
 * Unless explicit permission obtained in writing this software cannot be distributed.
 */


_params = {};
assertDocRepoURI = _params['assertDocRepo'];
assertRepoURI = _params['assertRepo'];
assertConfig = _params['assertRepoConfig'];
TODAY = _params['date'];
docRepoConfig = _params['config']; 
docPath = _params['docPath'];
docRepoURI = _params['docRepoURI'];


//---------- test -----------

returnVal = true;


//Create a document repo with fountain id
doc_repo_name = "documentPartition.reflexFountainTest"+ rand(100000);
CONFIG = 'NREP {} using MONGODB { prefix=doc_repo_name}';
FOUNTAIN_CFG = 'IDGEN { base="26",length="20", prefix="TST"} USING MONGODB {prefix="reflexFountainTest"}';
DOCUMENT_REPO_URI = 'document://'+doc_repo_name;


println ('Create ' + DOCUMENT_REPO_URI);
if (!(#doc.docRepoExists(DOCUMENT_REPO_URI))) do
	#doc.createDocRepo(DOCUMENT_REPO_URI, CONFIG);
end
#doc.setDocRepoIdGenConfig(DOCUMENT_REPO_URI, FOUNTAIN_CFG);

println('reset fountain id');
ftnUriFromDocApi = #doc.getDocRepoConfig(DOCUMENT_REPO_URI);
fountain_reset_flag = #idGen.setIdGen(ftnUriFromDocApi['idGenUri'],0L);
println('fountain got reset: ' + fountain_reset_flag);

println ('Testing fountain api with docs');
appendage='doc'+rand(1000)+'#id';
DOC_URI=DOCUMENT_REPO_URI + '/folder';
DOC_URI_APPEND=DOC_URI + '/'+appendage;	

acctDocContent = '{"glossary":{"title": "example glossary","GlossDiv": {"title": "S","GlossList": {"GlossEntry": {"ID": "SGML","SortAs": "SGML","GlossTerm": "Standard Generalized Markup Language","Acronym": "SGML","Abbrev": "ISO 8879:1986","GlossDef": {"para": "A meta-markup language, used to create markup languages such as DocBook.","GlossSeeAlso": ["GML", "XML"]},"GlossSee": "markup"}}}}}';

putContent=#doc.putDoc(DOC_URI_APPEND, acctDocContent);
println('putContent 1:' + putContent);
if !(putContent[(size(putContent) - 10) .. (size(putContent))] == '0000000001') do
	returnVal = false; 
end 

putContent=#doc.putDoc(DOC_URI_APPEND, acctDocContent);
println('putContent 2:' + putContent);
if !(putContent[(size(putContent) - 10) .. (size(putContent))] == '0000000002') do
	returnVal = false; 
end 

fountain_reset_flag = #idGen.nextIds(ftnUriFromDocApi['idGenUri'],8L);

appendage='doc'+rand(1000)+'#id';
DOC_URI_APPEND=DOC_URI + '/'+appendage;	

putContent=#doc.putDoc(DOC_URI_APPEND, acctDocContent);
println('putContent:' + putContent);
if !(putContent[(size(putContent) - 10) .. (size(putContent))] == '000000000B') do
	returnVal = false; 
end  

println ('Repo deletion');
#doc.deleteDocRepo(DOCUMENT_REPO_URI);

return returnVal;
