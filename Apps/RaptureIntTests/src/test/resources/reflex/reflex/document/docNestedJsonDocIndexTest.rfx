/**
 * Copyright (C) 2011-2013 Incapture Technologies LLC
 *
 * This is an autogenerated license statement. When copyright notices appear below
 * this one that copyright supercedes this statement.
 *
 * Unless required by applicable law or agreed to in writing, software is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied.
 *
 * Unless explicit permission obtained in writing this software cannot be distributed.
 */
if !defined(_params) do
	_params = {};
	_params['assertDocRepo'] =  '//reflexTest.validation/testRun';
	_params['assertRepo'] =  '//reflexTest.validation';
	_params['assertRepoConfig'] = 'NREP {} using MONGODB {prefix="validate.reflexTestData"}';	
	_params['date'] = 'today';
	_params['docRepoURI'] = '//someAuthority.testingReflex';
	_params['config'] = 'NREP {} using MONGODB {prefix="data.docData"}';
	_params['docPath'] = 'theDoc';
	 
end 

assertDocRepoURI = _params['assertDocRepo'];
assertRepoURI = _params['assertRepo'];
assertConfig = _params['assertRepoConfig'];
TODAY = _params['date'];
docRepoConfig = _params['config']; 
docPath = _params['docPath'];
docRepoURI = _params['docRepoURI'];

//---------- test -----------

returnVal = true;
CONFIG = 'NREP {} using MONGODB { prefix="docPartition.reflexTest" }';
DOCUMENT_REPO_URI = 'document://documentPartition.reflexTest';

if (!(#doc.docRepoExists(DOCUMENT_REPO_URI))) do
	#doc.createDocRepo(DOCUMENT_REPO_URI, CONFIG);
end

try do
	println ('Test nested json document index');
	acctDoc = '{"glossary":{"title": "example glossary","GlossDiv": {"title": "S","GlossList": {"GlossEntry": {"ID": "SGML","SortAs": "SGML","GlossTerm": "Standard Generalized Markup Language","Acronym": "SGML","Abbrev": "ISO 8879:1986","GlossDef": {"para": "A meta-markup language, used to create markup languages such as DocBook.","GlossSeeAlso": ["GML", "XML"]},"GlossSee": "markup"}}}}}';
	#doc.putDoc(DOCUMENT_REPO_URI+'/TestParentFolder/TestAcctDoc', acctDoc);
	indexConfig = 'gTitle(glossary.title) string, ggTitle(glossary.GlossDiv.title) string, ggggAbbrev(glossary.GlossDiv.GlossList.GlossEntry.Abbrev) string';
	#index.createIndex(DOCUMENT_REPO_URI, indexConfig);
	queryRes=#index.find(DOCUMENT_REPO_URI, 'SELECT gTitle WHERE ggTitle="S"');
	if !(queryRes['rows'][0][0]== 'example glossary') do
		returnVal = false;
	end
	
	queryRes=#index.find(DOCUMENT_REPO_URI, 'SELECT gTitle,ggTitle WHERE ggggAbbrev="ISO 8879:1986"');
	
	if !(queryRes['columnNames'][0]== 'gTitle') do
		returnVal = false;
	end
	
	if !(queryRes['columnNames'][1]== 'ggTitle') do
		returnVal = false;
	end
	
	if !(queryRes['rows'][0][0]== 'example glossary') do
		returnVal = false;
	end
	
end
catch e do
	returnVal = false;
end


//Repo Deletion
println('Repo Deletion');
#doc.deleteDocRepo(DOCUMENT_REPO_URI);

return returnVal;