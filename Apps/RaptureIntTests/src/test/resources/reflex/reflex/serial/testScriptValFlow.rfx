/**
 * Copyright (C) 2011-2013 Incapture Technologies LLC
 *
 * This is an autogenerated license statement. When copyright notices appear below
 * this one that copyright supercedes this statement.
 *
 * Unless required by applicable law or agreed to in writing, software is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied.
 *
 * Unless explicit permission obtained in writing this software cannot be distributed.
 */


// Reflex script

// This is a test for Reflex to verify the flow of validating data created and 
// retrieved by reflex

if !defined(_params) do
	_params = {};
	_params['assertDocRepo'] =  '//reflexTest.validation/testRun';
	_params['assertRepo'] =  '//reflexTest.validation';
	_params['assertRepoConfig'] = 'NREP {} using MONGODB {prefix="validate.reflexTestData"}';	
	_params['date'] = 'today';
	_params['docRepoURI'] = '//someAuthority.testingReflex';
	_params['config'] = 'NREP {} using MONGODB {prefix="data.docData"}';
	_params['docPath'] = 'theDoc';
	 
end 

assertDocRepoURI = _params['assertDocRepo'];
assertRepoURI = _params['assertRepo'];
assertConfig = _params['assertRepoConfig'];
TODAY = _params['date'];
docRepoConfig = _params['config']; 
docPath = _params['docPath'];
docRepoURI = _params['docRepoURI'];

println("our params: " + docRepoURI );

if #doc.docRepoExists(assertRepoURI) == false do
	#doc.createDocRepo(assertRepoURI, assertConfig);
end

if #doc.docRepoExists(docRepoURI) == false do
	#doc.createDocRepo(docRepoURI, docRepoConfig);
end

testData={};	
// lets create a bunch of data
for dataIndex = 0 to 1000 do


	newDataURI = docRepoURI + '/' + TODAY + '/' + dataIndex;
	newData = {};
	newData['date'] = TODAY;
	newData['increment'] = dataIndex;
	newData['randmonValue'] = 'fsfs';

	newData --> newDataURI;

	testData <-- newDataURI;

	
end
	//testDocFolders = {};
	//testDocFolders = #doc.getChildren(docRepoURI + '/' + TODAY);
	//println('number of folders created: ' + size(testDocFolders));
	
	somedata <-- assertDocRepoURI;
	println("lets print a value from the document");
	println("our data: " + somedata['value1']);
	somedata['value1'] = "true";
	somedata --> assertDocRepoURI;
	println("our data: " + somedata['value1']);

	return somedata['value1'];
