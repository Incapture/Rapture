/**
 * Copyright (C) 2011-2013 Incapture Technologies LLC
 *
 * This is an autogenerated license statement. When copyright notices appear below
 * this one that copyright supercedes this statement.
 *
 * Unless required by applicable law or agreed to in writing, software is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied.
 *
 * Unless explicit permission obtained in writing this software cannot be distributed.
 */


// this needs work

require "//reflexTest.scriptstore/commonFuncs.rfx" as comm;

// init the params we pass in
if !defined(_params) do
	_params = {};
	_params['assertDocRepo'] =  '//reflexTest.validation/testRun';
	_params['assertRepo'] =  '//reflexTest.validation';
	_params['assertRepoConfig'] = 'NREP {} using MONGODB {prefix="validate.reflexTestData"}';	
	_params['date'] = 'today';
	_params['docRepoURI'] = '//someAuthority.testingReflex';
	_params['config'] = 'NREP {} using MONGODB {prefix="data.docData"}';
	_params['docPath'] = 'theDoc';
	 
end 

assertDocRepoURI = _params['assertDocRepo'];
assertRepoURI = _params['assertRepo'];
assertConfig = _params['assertRepoConfig'];
TODAY = _params['date'];
docRepoConfig = _params['config']; 
docPath = _params['docPath'];
docRepoURI = _params['docRepoURI'];

//setup repos if they do not exist
//comm.init(assertRepoURI, assertConfig, docRepoURI, docRepoConfig);

//resultsData ={};
//CONFIG = 'NREP {} using MONGODB { prefix="docPartition.reflexTest" }';
//DOCUMENT_REPO_URI = 'document://documentPartition.reflexTest';


returnVal = false;


//---------------test-----------------
//--------relational operators--------
//---Integers Positive an negative.---

// --------------Equals-------------
println("\nTest Equals operator on numbers using an array.");
answerEquals= [];
resultEquals= [];

for i = -50 to 49 do
answerEquals = answerEquals + i;
end

for a in answerEquals do
	for b in answerEquals do 
		if a == b do 
			resultEquals=resultEquals+ a;
		end
	end
end

//resultsData['Equals_operator_on_numbers']['result'] = 'pass';
returnVal = true;

for q = 0 to 99 do
	if !((resultEquals[q] == answerEquals[q]) && (resultEquals[q]-answerEquals[q]==0)) do
		//resultsData['Equals_operator_on_numbers']['result'] = 'fail';
		returnVal = false;
		println('fail');
	end
end

if returnVal == true do 
	println('pass');
end


//println ('Reporting results to: ' + assertDocRepoURI + '/02operatorsRelOpIntTestScript.rfx/'+TODAY);
//resultsData --> assertDocRepoURI + '/02operatorsRelOpIntTestScript/'+TODAY;
return returnVal;
