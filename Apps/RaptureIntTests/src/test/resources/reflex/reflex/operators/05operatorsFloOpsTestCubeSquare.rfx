/**
 * Copyright (C) 2011-2013 Incapture Technologies LLC
 *
 * This is an autogenerated license statement. When copyright notices appear below
 * this one that copyright supercedes this statement.
 *
 * Unless required by applicable law or agreed to in writing, software is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied.
 *
 * Unless explicit permission obtained in writing this software cannot be distributed.
 */


// this needs work

require "//reflexTest.scriptstore/commonFuncs.rfx" as comm;

// init the params we pass in
if !defined(_params) do
	_params = {};
	_params['assertDocRepo'] =  '//reflexTest.validation/testRun';
	_params['assertRepo'] =  '//reflexTest.validation';
	_params['assertRepoConfig'] = 'NREP {} using MONGODB {prefix="validate.reflexTestData"}';	
	_params['date'] = 'today';
	_params['docRepoURI'] = '//someAuthority.testingReflex';
	_params['config'] = 'NREP {} using MONGODB {prefix="data.docData"}';
	_params['docPath'] = 'theDoc';
	 
end 

assertDocRepoURI = _params['assertDocRepo'];
assertRepoURI = _params['assertRepo'];
assertConfig = _params['assertRepoConfig'];
TODAY = _params['date'];
docRepoConfig = _params['config']; 
docPath = _params['docPath'];
docRepoURI = _params['docRepoURI'];

//setup repos if they do not exist
//comm.init(assertRepoURI, assertConfig, docRepoURI, docRepoConfig);

//resultsData ={};
//CONFIG = 'NREP {} using MONGODB { prefix="docPartition.reflexTest" }';
//DOCUMENT_REPO_URI = 'document://documentPartition.reflexTest';

returnVal = true;

/*
*/



//----------------test------------------
//---------manipulation operators-------

//----------------------------------------------------

println('\n---Test cube/square roots---');

mapp={};
//resultsData['Test_roots']['result']='pass';


for inv = 2 to 5 do

	for num = 1 to 20 do
		mapp[cast(num,'string')]=num^inv;
	end
	
	for num = 1 to 20 do
		if num!=mapp[num]^(1/inv) do 
			//resultsData['Test_roots']['result']='fail';
			returnVal = false;
		end
	end
end

if returnVal == true do
	println('pass');
end



//println ('Reporting results to: ' + assertDocRepoURI + '/05operatorsFloOpsTestScript.rfx/'+TODAY);
//resultsData --> assertDocRepoURI + '/05operatorsFloOpsTestScript.rfx/'+TODAY;
return returnVal;
