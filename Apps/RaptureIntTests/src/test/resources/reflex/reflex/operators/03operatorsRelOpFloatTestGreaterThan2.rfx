/**
 * Copyright (C) 2011-2013 Incapture Technologies LLC
 *
 * This is an autogenerated license statement. When copyright notices appear below
 * this one that copyright supercedes this statement.
 *
 * Unless required by applicable law or agreed to in writing, software is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied.
 *
 * Unless explicit permission obtained in writing this software cannot be distributed.
 */


// this needs work

require "//reflexTest.scriptstore/commonFuncs.rfx" as comm;

// init the params we pass in
if !defined(_params) do
	_params = {};
	_params['assertDocRepo'] =  '//reflexTest.validation/testRun';
	_params['assertRepo'] =  '//reflexTest.validation';
	_params['assertRepoConfig'] = 'NREP {} using MONGODB {prefix="validate.reflexTestData"}';	
	_params['date'] = 'today';
	_params['docRepoURI'] = '//someAuthority.testingReflex';
	_params['config'] = 'NREP {} using MONGODB {prefix="data.docData"}';
	_params['docPath'] = 'theDoc';
	 
end 

assertDocRepoURI = _params['assertDocRepo'];
assertRepoURI = _params['assertRepo'];
assertConfig = _params['assertRepoConfig'];
TODAY = _params['date'];
docRepoConfig = _params['config']; 
docPath = _params['docPath'];
docRepoURI = _params['docRepoURI'];

//setup repos if they do not exist
//comm.init(assertRepoURI, assertConfig, docRepoURI, docRepoConfig);

//resultsData ={};
//CONFIG = 'NREP {} using MONGODB { prefix="docPartition.reflexTest" }';
//DOCUMENT_REPO_URI = 'document://documentPartition.reflexTest';

returnVal = false;



//---------------test-----------------
//--------relational operators--------
//---Floats, positive and negative.---

//------------greater than again-------------
println("\nTest greater than operator.2");
answerGreat = [];
resultGreat = [];

for i = 42 to 50 do 
	g=0.1*i;
	answerGreat = answerGreat + g;
end

for j = -50 to 50 do
	e=j*0.1;
	if e > 4.11 do
		resultGreat = resultGreat +e;
	end
end
println(resultGreat);
println(answerGreat);
println('This test gets rid of that first value by setting our limit just slightly higher to remove first entry from before.');
if resultGreat == answerGreat do 
	//resultsData['Greater_than.2']['result'] = 'pass';
	println('pass');
	returnVal = true;
else do
	returnVal = false;
	//resultsData['Greater_than.2']['result'] = 'fail';
	println('fail');
end



//println ('Reporting results to: ' + assertDocRepoURI + '/03operatorsRelOpFloatTestScript.rfx/'+TODAY);
//resultsData --> assertDocRepoURI + '/03operatorsRelOpFloatTestScript/'+TODAY;
return returnVal;
