/**
 * Copyright (C) 2011-2013 Incapture Technologies LLC
 *
 * This is an autogenerated license statement. When copyright notices appear below
 * this one that copyright supercedes this statement.
 *
 * Unless required by applicable law or agreed to in writing, software is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied.
 *
 * Unless explicit permission obtained in writing this software cannot be distributed.
 */


// this needs work

require "//reflexTest.scriptstore/commonFuncs.rfx" as comm;

// init the params we pass in
if !defined(_params) do
	_params = {};
	_params['assertDocRepo'] =  '//reflexTest.validation/testRun';
	_params['assertRepo'] =  '//reflexTest.validation';
	_params['assertRepoConfig'] = 'NREP {} using MONGODB {prefix="validate.reflexTestData"}';	
	_params['date'] = 'today';
	_params['docRepoURI'] = '//someAuthority.testingReflex';
	_params['config'] = 'NREP {} using MONGODB {prefix="data.docData"}';
	_params['docPath'] = 'theDoc';
	 
end 

assertDocRepoURI = _params['assertDocRepo'];
assertRepoURI = _params['assertRepo'];
assertConfig = _params['assertRepoConfig'];
TODAY = _params['date'];
docRepoConfig = _params['config']; 
docPath = _params['docPath'];
docRepoURI = _params['docRepoURI'];

//setup repos if they do not exist
//comm.init(assertRepoURI, assertConfig, docRepoURI, docRepoConfig);

//resultsData ={};
//CONFIG = 'NREP {} using MONGODB { prefix="docPartition.reflexTest" }';
//DOCUMENT_REPO_URI = 'document://documentPartition.reflexTest';

returnVal = false;



//---------------test-----------------

bools = [true, false];
resultsAND = [];
resultsOR=[];
answersAND = [true,false,false,false];
answersOR = [true,true,true,false];


//-------------NOT---------------

println('\nTest NOT operator.');

if  !true == false do
	//resultsData['Test_NOT_operator']['result'] = 'pass';
	println('(!true == false)==true');
	returnVal = true;
else do
	returnVal = false;
	//resultsData['Test_NOT_operator']['result'] = 'fail';
	println('(!true == false)==false');
end
/*
if  !false == true do
	//resultsData['Test_NOT_operator']['result'] = 'pass';
	println('(!false==true)==true');
	returnVal = true;
else do
	returnVal = false;
	//resultsData['Test_NOT_operator']['result'] = 'fail';
	println('(!false==true)== false');
end
*/


//println ('Reporting results to: ' + assertDocRepoURI + '/01operatorsLogicOperatorsTestScript.rfx/'+TODAY);
//resultsData --> assertDocRepoURI + '/01operatorsLogicOperatorsTestScript/'+TODAY;
return returnVal;
