/**
 * Copyright (C) 2011-2015 Incapture Technologies LLC
 *
 * This is an autogenerated license statement. When copyright notices appear below
 * this one that copyright supercedes this statement.
 *
 * Unless required by applicable law or agreed to in writing, software is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied.
 *
 * Unless explicit permission obtained in writing this software cannot be distributed.
 */
package rapture.series.cassandra.config;

import static org.junit.Assert.fail;

import java.util.HashMap;
import java.util.Map;

import org.junit.Before;
import org.junit.Test;

import rapture.cassandra.CassandraConstants;
import rapture.series.config.InvalidConfigException;

public class CassandraConfigValidatorTest {

    private CassandraConfigValidator validator;

    @Before
    public void setUp() throws Exception {
        validator = new CassandraConfigValidator();
    }

    @Test
    public void test1() {
        Map<String, String> configMap  = new HashMap<String, String>();
        configMap.put(CassandraConstants.KEYSPACECFG, "a");
        configMap.put(CassandraConstants.CFCFG, "b");
        try {
            validator.validate(configMap  );
        } catch (InvalidConfigException e) {
            fail("Should have passed");
        }
    }

    @Test
    public void test2() {
        Map<String, String> configMap  = new HashMap<String, String>();
        configMap.put(CassandraConstants.KEYSPACECFG, "");
        configMap.put(CassandraConstants.CFCFG, "b");
        try {
            validator.validate(configMap  );
            fail("Should have failed");
        } catch (InvalidConfigException e) {
        }
    }
    
    @Test
    public void test4() {
        Map<String, String> configMap  = new HashMap<String, String>();
        configMap.put(CassandraConstants.KEYSPACECFG, "a");
        configMap.put(CassandraConstants.CFCFG, "");
        try {
            validator.validate(configMap  );
            fail("Should have failed");
        } catch (InvalidConfigException e) {
        }
    }

}
