/**
 * Copyright (C) 2011-2015 Incapture Technologies LLC
 *
 * This is an autogenerated license statement. When copyright notices appear below
 * this one that copyright supercedes this statement.
 *
 * Unless required by applicable law or agreed to in writing, software is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied.
 *
 * Unless explicit permission obtained in writing this software cannot be distributed.
 */
package rapture.repo.postgres;

import rapture.common.TableQueryResult;
import rapture.dsl.idef.IndexDefinition;
import rapture.dsl.idef.IndexDefinitionFactory;
import rapture.index.IndexProducer;
import rapture.postgres.PostgresFactory;
import rapture.table.postgres.PostgresIndexHandler;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.junit.Test;

/**
 * Test the lower level store outside of Rapture
 *
 * @author alanmoore
 */
public class TableTest {

    @Test
    public void testIt() {
        IndexDefinition def = IndexDefinitionFactory.getDefinition("field1(field1) string, field2(field2) string, val(val) number");
        PostgresIndexHandler dbTable = new PostgresIndexHandler();
        Map<String, String> config = new HashMap<String, String>();
        config.put("prefix", "testTable1");

        PostgresIndexHandler indexHandler = new PostgresIndexHandler();
        String instanceName = "default";
        indexHandler.setInstanceName(instanceName);
        IndexProducer indexProducer = new IndexProducer();
        indexProducer.addIndexDefinition(def);
        indexHandler.setIndexProducer(indexProducer);
        indexHandler.setConfig(config);
        indexHandler.setDataSource(PostgresFactory.getDataSource(instanceName));
        TableQueryResult res = dbTable.query("SELECT field1 WHERE val=42");
        for (List<Object> row : res.getRows()) {
            System.out.println(row);
        }
        dbTable.deleteTable();
    }
}
