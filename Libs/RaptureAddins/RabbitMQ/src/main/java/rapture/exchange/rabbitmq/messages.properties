#
# The MIT License (MIT)
#
# Copyright (C) 2011-2016 Incapture Technologies LLC
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

RabbitExchangeHandler.acknowledgeMessage=Acknowledging message with %b
RabbitExchangeHandler.binding=Binding to route %s with exchange %s
RabbitExchangeHandler.startConsuming=Starting to consume on queue %s
RabbitExchangeHandler.bindingQueues=Now binding queues to exchange
RabbitExchangeHandler.channelCreated=Channel created
RabbitExchangeHandler.config=Configuration of RabbitMQ exchange in progress
RabbitExchangeHandler.connectionMade=Connection made, creating channel
RabbitExchangeHandler.creatingChannel=Creating channel connection to RabbitMQ
RabbitExchangeHandler.deliveryHandled=Delivery handled
RabbitExchangeHandler.ensureAvail=Test to ensure %s is available
RabbitExchangeHandler.ExchangeDeclare=Exchange declare for exchange with name %s
RabbitExchangeHandler.exchangeType=Exchange type is %s
RabbitExchangeHandler.Flow=Flow is %b
RabbitExchangeHandler.sendMessage=Sending message id=%s, '%s', exchange=%s, routing=%s
RabbitExchangeHandler.noAcknowledge=Could not acknowledge message on queue = %s
RabbitExchangeHandler.noStartConsuming=Could not start consuming messages on queue %s
RabbitExchangeHandler.noConnect=Could not connect to RabbitMQ
RabbitExchangeHandler.noDelete=Could not delete exchange
RabbitExchangeHandler.noExchange=Could not ensure exchange was available
RabbitExchangeHandler.noPublish=Could not publish message on exchange
RabbitExchangeHandler.noRoute=No route bindings, binding to default with exchange %s
RabbitExchangeHandler.notYetSupported=Not yet supported
RabbitExchangeHandler.PlacingTask=Placing task on thread pool for execution
RabbitExchangeHandler.publishMessage=Publishing message onto exchange %s with routing %s and content type %s
RabbitExchangeHandler.puttingTask=Putting task on RabbitMQ exchange
RabbitExchangeHandler.receivedMessage=Received message with tag %d
RabbitExchangeHandler.returnListener=Return listener was fired with %s and %s
RabbitExchangeHandler.underly=Underlying queue is %s
RabbitExchangeHandler.underlyingQueue=Underlying queue to bind is %s
