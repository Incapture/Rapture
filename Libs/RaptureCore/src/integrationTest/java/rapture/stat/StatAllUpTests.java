/**
 * Copyright (C) 2011-2015 Incapture Technologies LLC
 *
 * This is an autogenerated license statement. When copyright notices appear below
 * this one that copyright supercedes this statement.
 *
 * Unless required by applicable law or agreed to in writing, software is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied.
 *
 * Unless explicit permission obtained in writing this software cannot be distributed.
 */
package rapture.stat;

import org.junit.Test;

import rapture.dsl.sgen.StatStoreFactory;

/**
 * All up tests of statistics
 * 
 * @author amkimian
 * 
 */
public class StatAllUpTests {
    @Test
    public void setItAllUp() {
        IRaptureStatApi statApi = StatStoreFactory.getStatImpl("STATUS {} USING MEMORY {}");
        statApi.defineStat("msg", "MESSAGE WITH { messages = \"5\" }");
        statApi.defineStat("val", "VALUE WITH { seconds = \"10\", operation=\"SUM\" }");
        statApi.defineStat("pres", "PRESENCE WITH { seconds = \"10\" }");
        statApi.defineStat("count", "COUNTER WITH {}");

        statApi.recordPresence("pres", "alan");
        statApi.recordPresence("pres", "fred");
        statApi.recordCounter("count", 10);
        statApi.recordCounter("count", -5);

        statApi.recordStringStat("msg", "Hello world");
        statApi.recordValue("val", 100);

        // Now wait 15 seconds

        waitAndCalc(statApi);

        statApi.recordPresence("pres", "alan");
        statApi.recordValue("val", 100);

        waitAndCalc(statApi);

    }

    private void waitAndCalc(IRaptureStatApi statApi) {
        try {
            Thread.sleep(10000);
        } catch (InterruptedException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

        for (String k : statApi.getStatKeys()) {
            statApi.computeRecord(k);
        }

        // Now get values
        System.out.println(statApi.getCurrentStat());

        for (String k : statApi.getStatKeys()) {
            System.out.println(statApi.getHistory(k));
        }
    }
}
