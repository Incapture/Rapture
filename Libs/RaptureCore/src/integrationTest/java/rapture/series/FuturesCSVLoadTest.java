/**
 * Copyright (C) 2011-2015 Incapture Technologies LLC
 *
 * This is an autogenerated license statement. When copyright notices appear below
 * this one that copyright supercedes this statement.
 *
 * Unless required by applicable law or agreed to in writing, software is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied.
 *
 * Unless explicit permission obtained in writing this software cannot be distributed.
 */
package rapture.series;

import java.io.IOException;

import rapture.common.client.HttpLoginApi;
import rapture.common.client.HttpSeriesApi;
import rapture.common.client.SimpleCredentialsProvider;

public class FuturesCSVLoadTest {
    public static void main(String arg[]) throws IOException {
        String username = "rapture";
        String password = "rapture";
        String url = "http://localhost:8665/rapture";
        final String authority = "dev";
        final String repo = "futures";
        
        System.out.println("Starting up");
        switch (arg.length) {
            case 3:
                username = arg[1];
                password = arg[2];
            case 1:
                url = arg[0];
            case 0:
                break;
            default:
                System.err.println("Usage: java rapture.series.FuturesCSVLoadTest [url [username passord]]");
        }
        
        CSVSeriesLoader loader = CSVSeriesLoader.newBuilder()
            .setAuthority(authority)
            .setRepo(repo)
            .setSortColumn(0)
            .bindAllAsDecimals("future_series/")
            .build();
        System.out.println("Logging in...");
        HttpLoginApi login = new HttpLoginApi(url, new SimpleCredentialsProvider(username, password));
        login.login();
        System.out.println("Logged in");
        HttpSeriesApi api = new HttpSeriesApi(login);
        CSVSeriesLoader.setApi(api);
        System.out.println("Creating Repo");
        //api.createSeriesRepo(authority, repo, "SREP {} USING MEMORY { }");
        api.createSeriesRepo("//" + authority + "/" + repo, "SREP {} USING CASSANDRA { cf=\"futures_table4\" , keyspace=\"futures_repo4\" }");
        System.out.println("Adding rows...");
        loader.load("/Users/mel/csv/Futures_Series.csv", true);
    }
}
