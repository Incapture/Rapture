/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2011-2016 Incapture Technologies LLC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package rapture.kernel;

import java.util.HashMap;
import java.util.Map;

/**
 * The addin api manager holds implementations (*ImplWrapper instances) of APIs
 * that have been found from an api-addins style folder. The binding code of these apis
 * is autogenerated using SdkGen and then implemented by an SDK user. This manager is used to cement
 * the APIs into an appropriate Kernel spot in Rapture and to allow an API servlet mapping to take
 * place as well.
 * 
 * @author amkimian
 *
 */
public class AddedApiManager {

    private Map<String, Object> apis = new HashMap<String, Object>();
    
    public Object get(String apiName) {
        return apis.get(apiName);
    }

    public void addAPI(String name, Object baseApi) {
        apis.put(name, baseApi);
    }

}
