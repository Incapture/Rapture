jar.manifest.attributes "Implementation-Title" : "CodeGenLib"

configurations { antlr3 }

dependencies {
    compile project(":RaptureCommon")
    compile project(":SlateDocGenerator")
    compile 'org.antlr:antlr-runtime:3.5.2'
    antlr3 'org.antlr:antlr:3.5.2'
    compile 'org.antlr:stringtemplate:3.2'
    compile 'org.apache.commons:commons-math3:3.0'
    compile 'com.google.code.javaparser:javaparser:1.0.11'
}

task antlrOutputDir << { mkdir(generateGrammarSource.destinationDir) }

task generateGrammarSource(dependsOn: antlrOutputDir, type: JavaExec) {
    description = 'Generates Java sources from Antlr3 grammars.'
    convention.destinationDir = "$buildDir/generated-sources/antlr/com/incapture/rapgen"
    convention.antlrGenRootDir = "$buildDir/generated-sources/antlr/";
    def antlrSource = 'src/main/antlr3'

    inputs.dir file(antlrSource)
    outputs.dir file(destinationDir)

    def grammars = fileTree(antlrSource).include('**/*.g').exclude('**/TTreeShared.g').exclude('**/Types.g')

    main = 'org.antlr.Tool'
    classpath = configurations.antlr3
    args = [
            "-o",
            "${destinationDir}",
            grammars.files
    ].flatten()
}

addPath(project, "main", "java", generateGrammarSource.antlrGenRootDir)

compileJava {
    dependsOn generateGrammarSource
    source generateGrammarSource.destinationDir
}

test {
    include 'com/incapture/**'
}
