group T;

apiEntry(ret, name, params, doc) ::= <<
/**
  <doc>
*/
<ret> <name>(<params; separator=", ">);
>>

param(type,name) ::= "<type> <name>"

param2(name) ::= "<name>"

apilist(apitype, apis, typeimports) ::= <<
/**
 * The MIT License (MIT)
 *
 * Copyright (C) 2011-2016 Incapture Technologies LLC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * This is an autogenerated file. You should not edit this file as any changes
 * will be overwritten.
 */

package rapture.common.api;
import rapture.common.exception.RaptException;
import rapture.common.CallingContext;
import java.util.List;
import java.util.Map;
<typeimports>

@SuppressWarnings("all")
public interface <apitype>Api {
     <apis; separator="\n">
}
>>

wrapperEntry(ret, name, params, callParams, apitype) ::= <<
@Override
public <ret> <name>(<params; separator=", ">) {
    <name; format="upcase">Payload requestObj = new <name; format="upcase">Payload();
    requestObj.setContext(context);
    <rest(callParams):apiset(); separator="\n">
    contextValidator.validateContext(context, EntitlementSet.<apitype; format="upcase">_<name>, requestObj);

    Kernel.getApiHooksService().pre(context, CallName.<apitype>_<name>);
    <ret> returnValue = apiImpl.<name>(<callParams; separator=", ">);
    Kernel.getApiHooksService().post(context, CallName.<apitype>_<name>);

    return returnValue;
}

>>

wrapperImpl(apitype, apis, typeimports, payloadImports) ::= <<
/**
 * The MIT License (MIT)
 *
 * Copyright (C) 2011-2016 Incapture Technologies LLC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * This is an autogenerated file. You should not edit this file as any changes
 * will be overwritten.
 */

package rapture.kernel;

import org.apache.log4j.Logger;

import java.util.List;
import java.util.Map;

import rapture.common.api.<apitype>Api;
import rapture.common.CallingContext;
import rapture.common.RaptureEntitlementsContext;

import rapture.common.hooks.CallName;

import rapture.common.model.BasePayload;
import rapture.common.EntitlementSet;
import rapture.kernel.context.ContextValidator;

<typeimports>
<payloadImports; separator="\n">

/**
 * This class is a wrapper around the class {@link <apitype>ApiImpl}. This is an auto-generated class that gives us the ability to add hooks such as entitlmeent
 * checks before each function call in the implementation. Since we always want to call these hooks, an instance of this class should be used
 * (in {@link Kernel}) instead of using the implementation directly.
 * implementation directly.
 *
 */
@SuppressWarnings("all")
public class <apitype>ApiImplWrapper implements <apitype>Api, KernelApi {
    private static final Logger log = Logger.getLogger(<apitype>ApiImplWrapper.class);
    private <apitype>ApiImpl apiImpl;
    private ContextValidator contextValidator;

    public <apitype>ApiImplWrapper(Kernel kernel) {
        apiImpl = new <apitype>ApiImpl(kernel);
        contextValidator = new ContextValidator();
    }

    /**
     * Returns the underlying implementation object. This is a temporary workaround, it should not be normally used!
     * @return {@link <apitype>}
     */
    public <apitype>ApiImpl getTrusted() {
        return apiImpl;
    }

    @Override
    public void start() {
        apiImpl.start();
    }

    <apis; separator="\n">
}
>>

scriptapiimpl(apittype, apis, typeimports) ::= <<
/**
 * The MIT License (MIT)
 *
 * Copyright (C) 2011-2016 Incapture Technologies LLC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
/**
 * This is an autogenerated file. You should not edit this file as any changes
 * will be overwritten.
 */
package rapture.kernel.script;

import java.util.List;
import java.util.Map;

import rapture.common.api.<apitype>Api;
import rapture.common.api.Script<apitype>Api;

import rapture.common.CallingContext;
import rapture.common.exception.RaptException;

<typeimports>

@SuppressWarnings("all")
public class Script<apitype> implements Script<apitype>Api {
	private CallingContext callingCtx;
	private <apitype>Api api;

	public void setCallingContext(CallingContext ctx) {
		this.callingCtx = ctx;
	}

	public Script<apitype>(<apitype>Api api) {
		this.api = api;
	}

	<apis>
}
>>

scriptapientry(ret, name, params, apiparams) ::= <<
   @Override
   public <ret> <name>(<params; separator=",">) {
   	return api.<name>(callingCtx<if(apiparams)>, <apiparams; separator=", "><endif>);
   }

>>

scriptapilist(apitype, apis, typeimports) ::= <<
/**
 * The MIT License (MIT)
 *
 * Copyright (C) 2011-2016 Incapture Technologies LLC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * This is an autogenerated file. You should not edit this file as any changes
 * will be overwritten.
 */

package rapture.common.api;
import rapture.common.CallingContext;
import rapture.common.exception.RaptException;
import java.util.List;
import java.util.Map;
<typeimports>

@SuppressWarnings("all")
public interface Script<apitype>Api {
     <apis; separator="\n">
}
>>


package(name) ::= <<
import <name>;
>>

apisec(api) ::= "<api>"

params(p) ::= <<
<p; separator=", ">
>>

attrForClass(type, name) ::= <<
	private <type> <name>;

	public void set<name; format="upcase">(<type> <name>) {
	     this.<name> = <name>;
	}

	public <type> get<name; format="upcase">() {
	     return this.<name>;
	}
>>

entValues(ents) ::= <<
/**
 * The MIT License (MIT)
 *
 * Copyright (C) 2011-2016 Incapture Technologies LLC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
/**
 * This is an autogenerated file. You should not edit this file as any changes
 * will be overwritten.
 */

package rapture.common;

public final class EntitlementConst {
   private EntitlementConst() {
   }

   <ents.keys: { k |
     public static final String <k> = "<ents.(k)>";
  }>

}
>>

entEntry(api, name, path) ::= <<
    <api>_<name>(EntitlementConst.<path>)
>>

entTypes(entTypes) ::= <<

  <entTypes; separator=",\n">
>>

fullEnt(ents) ::= <<
/**
 * The MIT License (MIT)
 *
 * Copyright (C) 2011-2016 Incapture Technologies LLC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * This is an autogenerated file. You should not edit this file as any changes
 * will be overwritten.
 */

package rapture.common;

public enum EntitlementSet {
  <ents; separator=",\n">;

  private String path;

  EntitlementSet(String path) {
      this.path = path;
    };

  public String getPath() {
    return path;
  };
}

>>

callNameEntry(api, name) ::= <<
    <api>_<name>(ApiName.<api>)
>>

callNamesEnum(ents) ::= <<
/**
 * The MIT License (MIT)
 *
 * Copyright (C) 2011-2016 Incapture Technologies LLC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
/**
 * This is an autogenerated file. You should not edit this file as any changes
 * will be overwritten.
 */

package rapture.common.hooks;

public enum CallName {
    <ents; separator=",\n">;

        private ApiName apiName;

        CallName(ApiName apiName) {
            this.apiName = apiName;
        }

        public ApiName getApiName() {
            return apiName;
        }

}
>>

apiNamesEnum(ents) ::= <<
/**
 * The MIT License (MIT)
 *
 * Copyright (C) 2011-2016 Incapture Technologies LLC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
/**
 * This is an autogenerated file. You should not edit this file as any changes
 * will be overwritten.
 */

package rapture.common.hooks;

public enum ApiName {
    <ents; separator=",\n">;
}
>>

scriptApiInterface(ents) ::= <<
/**
 * The MIT License (MIT)
 *
 * Copyright (C) 2011-2016 Incapture Technologies LLC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * This is an autogenerated file. You should not edit this file as any changes
 * will be overwritten.
 */

package rapture.common.api;
import rapture.common.InstallableKernel;

public interface ScriptingApi {
    <ents:scriptApiEntry(); separator="\n">;
    public InstallableKernel getInstalledKernel(String name);
}
>>

scriptApiEntry(ent) ::= <<
    public Script<ent; format="upcase">Api get<ent; format="upcase">();
>>

dispatchEntry(name) ::= <<
<name; format="upper">(<name; format="upcase">Dispatch.class)
>>

dispatchFn(apitype, dispatcher) ::= <<
/**
 * The MIT License (MIT)
 *
 * Copyright (C) 2011-2016 Incapture Technologies LLC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * This file is autogenerated and any changes will be overwritten
 */

package rapture.common.shared.<apitype; format="lower">;
import rapture.common.exception.RaptException;
import rapture.server.BaseDispatcher;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public enum Dispatch<apitype; format="upcase">Function {
    <dispatcher; separator=",\n">;

        private BaseDispatcher dispatcher;

	\<T extends BaseDispatcher\> Dispatch<apitype; format="upcase">Function(Class\<T\> klass) {
                try {
                   this.dispatcher = klass.newInstance();
                } catch(Exception e) {
                   throw new RaptException(e);
		}
	}

        public String executeDispatch(String params, HttpServletRequest req, HttpServletResponse resp) {
		return this.dispatcher.dispatch(params, req, resp);
        }
}
>>

payloadFile(apitype, ret, name, params, apiparams, imports, retImport) ::= <<
/**
 * The MIT License (MIT)
 *
 * Copyright (C) 2011-2016 Incapture Technologies LLC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * This file is autogenerated and any changes made to it will be overwritten
 */

package rapture.common.shared.<apitype; format="lower">;
import java.util.List;
import java.util.Map;
<imports; separator="\n">
import rapture.common.model.BasePayload;
import rapture.common.RaptureURI;
import rapture.common.RaptureURI.Scheme;

@SuppressWarnings("all")
public class <name; format="upcase">Payload extends BasePayload {
<params; separator="\n">

<dynEnt; separator="\n">

}
>>

payloadTestFile(apiType, ret, name, testSetters, testGetters) ::= <<
/**
 * The MIT License (MIT)
 *
 * Copyright (C) 2011-2016 Incapture Technologies LLC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
/**
 * This file is autogenerated and any changes made to it will be overwritten
 */
package rapture.common.shared.<apitype; format="lower">;

import static org.junit.Assert.assertTrue;

import org.junit.Test;

import rapture.common.exception.RaptException;
import rapture.common.impl.jackson.JacksonUtil;

@SuppressWarnings("all")
public class <name; format="upcase">PayloadTest {
  @Test
  public void testSerialization() {
    <name; format="upcase">Payload payload = new <name; format="upcase">Payload();
    <testSetters; separator="\n">
    String val = JacksonUtil.jsonFromObject(payload);
    System.out.println(val);
    <name; format="upcase">Payload ret = JacksonUtil.objectFromJson(val, <name; format="upcase">Payload.class);
    <testGetters; separator="\n">
    String val2 = JacksonUtil.jsonFromObject(ret);
    assertTrue(val.equals(val2));
  }
}
>>

callSetter(name, value) ::= <<
  payload.set<name; format="upcase">(<value>);
>>

testGetter(name, value, equalsTest) ::= <<
 <if(equalsTest)>
    assertTrue(payload.get<name; format="upcase">() == ret.get<name; format="upcase">());
 <else>
    assertTrue(payload.get<name; format="upcase">().equals(ret.get<name; format="upcase">()));
 <endif>
>>

dispatchFile(apitype, ret, name, params, apiparams, imports, retImport, ent) ::= <<
/**
 * The MIT License (MIT)
 *
 * Copyright (C) 2011-2016 Incapture Technologies LLC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * This file is autogenerated and any changes will be overwritten
 */

package rapture.common.shared.<apitype; format="lower">;
import java.util.List;
import java.util.Map;

import rapture.common.EntitlementSet;
<imports; separator="\n">
<retImport>
import rapture.common.exception.RaptException;
import rapture.common.impl.jackson.JacksonUtil;
import rapture.kernel.Kernel;
import rapture.server.BaseDispatcher;
import rapture.common.model.GeneralResponse;
import rapture.common.CallingContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@SuppressWarnings("all")
public class <name; format="upcase">Dispatch extends BaseDispatcher {

	@Override
	public String dispatch(String params, HttpServletRequest req, HttpServletResponse resp) {
		try {
			<name; format="upcase">Payload payload = JacksonUtil.objectFromJson(params, <name; format="upcase">Payload.class);
			CallingContext sessionContext = validateSession(req, payload); // will throw RaptNotLoggedInException if not a valid logged in context
			preHandlePayload(sessionContext, payload,  EntitlementSet.<apitype; format="upcase">_<name>.getPath());
			  <ret> rsp = Kernel.get<apitype>().<name>(sessionContext == null ? payload.getContext() : sessionContext <if(rest(apiparams))>, <rest(apiparams):payset(); separator=","><endif>);
			  return processResponse(new GeneralResponse(rsp));
		}
		catch (RaptException e) {
			return error(e);
		}
	}

}

>>
// Don't do this line for the first one
apiset() ::= <<
requestObj.set<it; format="upcase">(<it>);
>>

payset() ::= <<
payload.get<it; format="upcase">()
>>

httpscriptapifn(apitype, ret, name, params, callParams) ::= <<
       @Override
       public <ret> <name>(<params; separator=", ">) {
            return <name>(null<if(callParams)>,<endif><callParams; separator=",">);
       }
>>

httpapifn(apitype, ret, name, params, apiparams) ::= <<
    private static final class <name; format="upcase">TypeReference extends TypeReference\<<ret>\> {
    }

    @Override
    public <ret> <name>(<params; separator=", ">) {
        <name; format="upcase">Payload requestObj = new <name; format="upcase">Payload();
        requestObj.setContext(context == null ? this.getContext() : context);
        <rest(apiparams):apiset(); separator="\n">
        return doRequest(requestObj, "<name; format="upper">", new <name; format="upcase">TypeReference());
    }

>>

httpfile(apitype, imports, payloadImports, fns, scriptFns) ::= <<
/**
 * The MIT License (MIT)
 *
 * Copyright (C) 2011-2016 Incapture Technologies LLC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * This file is autogenerated and any changes will be overwritten.
 */

package rapture.common.client;

import java.util.List;
import java.util.Map;
import rapture.common.api.<apitype; format="upcase">Api;
import rapture.common.api.Script<apitype; format="upcase">Api;
import rapture.common.CallingContext;
import rapture.common.model.GeneralResponse;
import rapture.common.model.BasePayload;
import rapture.common.exception.RaptException;
import rapture.common.impl.jackson.JacksonUtil;

import org.codehaus.jackson.type.TypeReference;
<imports; separator="\n">
<payloadImports; separator="\n">

@SuppressWarnings("all")
public class Http<apitype; format="upcase">Api extends BaseHttpApi implements <apitype; format="upcase">Api, Script<apitype; format="upcase">Api {
	public Http<apitype; format="upcase">Api(HttpLoginApi login) {
		super(login, "<apitype; format="lower">");
	}

	<fns; separator="\n">

	<scriptFns; separator="\n">
}

>>

reqRespImp(apitype, name) ::= <<
import rapture.common.shared.<apitype; format="lower">.<name; format="upcase">Payload;
>>

versionConst(major, minor, micro, type, package) ::= <<
/**
 * The MIT License (MIT)
 *
 * Copyright (C) 2011-2016 Incapture Technologies LLC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * This is an autogenerated file. You should not edit this file as any changes
 * will be overwritten.
 */

package <package>;

import rapture.common.version.ApiVersion;

public enum <type>ApiVersion {
    INSTANCE;

    public static ApiVersion getApiVersion() {
        return INSTANCE.apiVersion;
    }
    public static final int MAJOR = <major>;
    public static final int MINOR = <minor>;
    public static final int MICRO = <micro>;

    private ApiVersion apiVersion;

    private <type>ApiVersion() {
        apiVersion = new ApiVersion();
        apiVersion.setMajor(MAJOR);
        apiVersion.setMinor(MINOR);
        apiVersion.setMicro(MICRO);
    }

}
>>

dynamicentitlemententry(dynEntType, uriArg) ::= <<

    private String <dynEntType>;
    public String get<dynEntType; format="upcase">() {
        return new RaptureURI(<uriArg>, Scheme.DOCUMENT).get<dynEntType; format="upcase">();
    }

>>
