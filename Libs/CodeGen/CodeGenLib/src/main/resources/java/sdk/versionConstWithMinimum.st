/**
 * The MIT License (MIT)
 *
 * Copyright (C) 2011-2016 Incapture Technologies LLC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * This is an autogenerated file. You should not edit this file as any changes
 * will be overwritten.
 */

package rapture.<sdkname>.<packageSuffix>;

import rapture.common.version.ApiVersion;

public enum <type>ApiVersion {
    INSTANCE;
    
    public static final int MAJOR = <major>;
    public static final int MINOR = <minor>;
    public static final int MICRO = <micro>;
    public static final int MIN_MAJOR = <minmajor>;
    public static final int MIN_MINOR = <minminor>;
    public static final int MIN_MICRO = <minmicro>;

    private ApiVersion apiVersion;
    private ApiVersion minVersion;
    
    private <type>ApiVersion() {
        apiVersion = new ApiVersion();
        apiVersion.setMajor(MAJOR);
        apiVersion.setMinor(MINOR);
        apiVersion.setMicro(MICRO);
        minVersion = new ApiVersion();
        minVersion.setMajor(MIN_MAJOR);
        minVersion.setMinor(MIN_MINOR);
        minVersion.setMicro(MIN_MICRO);
    }

    public static ApiVersion getMinimumVersion() {
        return INSTANCE.minVersion;
    }

    public static ApiVersion getApiVersion() {
        return INSTANCE.apiVersion;
    }
}
