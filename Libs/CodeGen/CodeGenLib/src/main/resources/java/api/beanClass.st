/**
 * The MIT License (MIT)
 *
 * Copyright (C) 2011-2016 Incapture Technologies LLC
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * This file is autogenerated and any changes will be overwritten.
 */

package <package>;

import rapture.common.*;
import rapture.object.Storable;
import rapture.object.Debugable;
import rapture.common.version.ApiVersion;
import rapture.common.impl.jackson.JacksonUtil;
<importList; separator="\n">

import com.fasterxml.jackson.annotation.JsonProperty;

/**
* <if(deprecated)> @deprecated Replaced by <deprecated> <endif>
**/
@SuppressWarnings("all")
public class <name> <if(extend)> extends <extend> <endif> implements RaptureTransferObject, Debugable <if(storable)>,Storable <potentialAddressable><endif> {
    <fields; separator="\n">
   
    <addressMethod>

    <hashCodeMethod>

    <equalsMethod>

    <debugMethod>

<if(storable)>
    @Override
    public String getStoragePath() {
     // Add key fields
      return new <name>PathBuilder()
        <adders; separator="\n">
        .buildStoragePath();
    }
    
    @Override
    public RaptureURI getStorageLocation() {
       return new <name>PathBuilder()
         <adders; separator="\n">
         .buildStorageLocation();
    }
    
 <else>

<if (extend)>
/********
    public <name>() {
        super();
    }

    public <name>(<extend> parent) {
        super(parent);
    }
********/
<endif>

 <endif>


    @Override
    public String toString() {
        return JacksonUtil.jsonFromObject(this);
    }

    private ApiVersion _raptureVersion;

    @JsonProperty("_raptureVersion")
    public ApiVersion get_raptureVersion() {
        return _raptureVersion;
    }

    @JsonProperty("_raptureVersion")
    public void set_raptureVersion(ApiVersion _raptureVersion) {
        this._raptureVersion = _raptureVersion;
    }
}
