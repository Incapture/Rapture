/**
 * Copyright (C) 2011-2013 Incapture Technologies LLC
 * 
 * This is an autogenerated license statement. When copyright notices appear below
 * this one that copyright supercedes this statement.
 *
 * Unless required by applicable law or agreed to in writing, software is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied.
 *
 * Unless explicit permission obtained in writing this software cannot be distributed.
 */

/**
 * This file is autogenerated and any changes will be overwritten
 */

package rapture.<sdkPackagePrefix>common.shared.<apitype; format="lower">;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.net.HttpURLConnection;

import rapture.common.exception.RaptureExceptionFactory;
import rapture.server.BaseDispatcher;
import rapture.common.DispatchReturn;
import rapture.common.Messages;

public enum Dispatch<apitype; format="upcase">Function {
    <dispatcher; separator=",\n">;

        private BaseDispatcher dispatcher;	
	
    \<T extends BaseDispatcher\> Dispatch<apitype; format="upcase">Function(Class\<T\> klass) {
        try {
            this.dispatcher = klass.newInstance();
        } catch (InstantiationException | IllegalAccessException e) {
            throw RaptureExceptionFactory.create(HttpURLConnection.HTTP_INTERNAL_ERROR, Messages.getMessage("Api", "ErrorInitDispatch", null, null),  e);
        }
    }

    public DispatchReturn executeDispatch(String params, HttpServletRequest req, HttpServletResponse resp) {
        return this.dispatcher.dispatch(params, req, resp);
    }	
}
