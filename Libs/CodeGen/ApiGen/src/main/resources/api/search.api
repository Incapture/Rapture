[Search related functions for indexed data and fast retrieval]
api(Search) {

    [Search for data using a Lucene compliant query string query.  Default size of result set returned is 10]
    @entitle=/search/read
    @public SearchResponse search(String query);
    
    [Search for data using a Lucene compliant query string query.  This will return a cursor for scrolling thru the results.  The initial call should pass in the cursor argument as null or empty, but subsequent calls should use the previously returned cursorId.  The size parameter specifies how many results should be returned per call]
    @entitle=/search/read
    @public SearchResponse searchWithCursor(String cursorId, int size, String query);

    [Validates repository; requires write permission because it can cause files/tables to be created on first use.]
    @entitle=/repo/write
    @public Boolean validateSearchRepo(String searchRepoUri);
    
    [A FTSearchRepository is used to store full text search repos.]
    @entitle=/repo/write
    @public void createSearchRepo(String searchRepoUri, String config);

    [This API call can be used to determine whether a given repository exists.]
    @entitle=/repo/list
    @public Boolean searchRepoExists(String searchRepoUri);

    [Retrieves the configuration string for the given search repository.]
    @entitle=/repo/read
    @public SearchRepoConfig getSearchRepoConfig(String searchRepoUri);
       
    [Retrieves search repositories]
    @entitle=/repo/read
    @public List(SearchRepoConfig) getSearchRepoConfigs();

    [This method removes a search repository and its data from the Rapture system. There is no undo.] 
    @entitle=/repo/write
    @public void deleteSearchRepo(String searchRepoUri);

}