/**
 * Copyright (C) 2011-2013 Incapture Technologies LLC
 * 
 * This is an autogenerated license statement. When copyright notices appear below
 * this one that copyright supercedes this statement.
 *
 * Unless required by applicable law or agreed to in writing, software is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied.
 *
 * Unless explicit permission obtained in writing this software cannot be distributed.
 */

/**
 * This is an autogenerated file. You should not edit this file as any changes
 * will be overwritten.
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using DotNetRaptureAPI.Common.FixedTypes;

namespace DotNetRaptureAPI
{

public interface ScriptUserApi {
     /**
     * 
     * 
     */
     RaptureUser getWhoAmI();

     /**
     * 
     * 
     */
     void logoutUser();

     /**
     * 
     * 
     */
     void storePreference(string category, string name, string content);

     /**
     * 
     * 
     */
     string getPreference(string category, string name);

     /**
     * 
     * 
     */
     void removePreference(string category, string name);

     /**
     * 
     * 
     */
     List<string> getPreferenceCategories();

     /**
     * 
     * 
     */
     List<string> getPreferencesInCategory(string category);

     /**
     * 
     * 
     */
     RaptureUser updateMyDescription(string description);

     /**
     * 
     * 
     */
     RaptureUser changeMyPassword(string oldHashPassword, string newHashPassword);

     /**
     * 
     * 
     */
     RaptureUser changeMyEmail(string newAddress);

     /**
     * 
     * 
     */
     ApiVersion getServerApiVersion();

     /**
     * 
     * 
     */
     RaptureCubeResult runFilterCubeView(string typeURI, string scriptURI, string filterParams, string groupFields, string columnFields);

     /**
     * 
     * 
     */
     RaptureQueryResult runNativeQuery(string typeURI, string repoType, List<string> queryParams);

     /**
     * 
     * 
     */
     RaptureCubeResult runNativeFilterCubeView(string typeURI, string repoType, List<string> queryParams, string groupFields, string columnFields);

     /**
     * 
     * 
     */
     bool isPermitted(string apiCall, string callParam);

}
}

