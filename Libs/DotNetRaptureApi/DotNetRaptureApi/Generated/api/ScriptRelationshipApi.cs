/**
 * Copyright (C) 2011-2013 Incapture Technologies LLC
 * 
 * This is an autogenerated license statement. When copyright notices appear below
 * this one that copyright supercedes this statement.
 *
 * Unless required by applicable law or agreed to in writing, software is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied.
 *
 * Unless explicit permission obtained in writing this software cannot be distributed.
 */

/**
 * This is an autogenerated file. You should not edit this file as any changes
 * will be overwritten.
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using DotNetRaptureAPI.Common.FixedTypes;

namespace DotNetRaptureAPI
{

public interface ScriptRelationshipApi {
     /**
     * 
     * 
     */
     void createRelationshipRepo(string relationshipRepoURI, string config);

     /**
     * 
     * 
     */
     RelationshipRepoConfig getRelationshipRepoConfig(string blobRepoURI);

     /**
     * 
     * 
     */
     List<RelationshipRepoConfig> getAllRelationshipRepoConfigs();

     /**
     * 
     * 
     */
     void deleteRelationshipRepo(string repoURI);

     /**
     * 
     * 
     */
     bool doesRelationshipRepoExist(string repoURI);

     /**
     * 
     * 
     */
     bool doesRelationshipExist(string relationshipURI);

     /**
     * 
     * 
     */
     string createRelationship(string relationshipAuthorityURI, string fromURI, string toURI, string label, Dictionary<string, string> properties);

     /**
     * 
     * 
     */
     RaptureRelationship getRelationship(string relationshipURI);

     /**
     * 
     * 
     */
     void deleteRelationship(string relationshipURI);

     /**
     * 
     * 
     */
     List<RaptureRelationship> getOutboundRelationships(string relationshipRepoURI, string fromURI);

     /**
     * 
     * 
     */
     List<RaptureRelationship> getInboundRelationships(string relationshipRepoURI, string toURI);

     /**
     * 
     * 
     */
     List<RaptureRelationship> getLabledRelationships(string relationshipRepoURI, string relationshipLabel);

     /**
     * 
     * 
     */
     List<RaptureFolderInfo> getChildren(string prefix);

     /**
     * 
     * 
     */
     Dictionary<string, RaptureFolderInfo> getAllChildrenMap(string prefix);

     /**
     * 
     * 
     */
     RaptureRelationshipRegion getRelationshipCenteredOn(string relationshipNodeURI, Dictionary<string, string> options);

}
}

