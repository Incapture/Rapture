{"name":"Rapture","tagline":"","body":"### Rapture\r\nRapture is a platform on which you can host applications that manage and manipulate data. Rapture can host the data on MongoDB, Cassandra or you can add your own addin to support an alternate store. Rapture instances communicate through messaging and there is a default RabbitMQ implementation.\r\n\r\nThe Rapture platform also supports workflows - custom sequences of steps that can be invoked through an API or tied to a schedule. Individual steps in the workflow could run custom Java code or Rapture's internal scripting language known as Reflex. \r\n\r\n### Rapture API\r\nRapture's API is defined in an IDL and the build process creates client side stubs in a number of languages - Java, JavaScript, Python, Ruby and DotNet are some of the languages supported. You can write client side applications that connect to Rapture servers using that technique.\r\n\r\n### Rapture Core\r\nYou can also create server side applications that embed the Rapture Core. If you choose to you can make your application also be an endpoint for the RaptureAPI by referencing the common servlets contained in the codebase.\r\n\r\n### Authors and Contributors\r\nAlan Moore @amkimian\r\n\r\n","google":"UA-41038257-1","note":"Don't delete this file! It's used internally to help with page regeneration."}